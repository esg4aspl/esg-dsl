/*
 * generated by Xtext 2.25.0
 */
grammar InternalMkDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.mert.recherche.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.mert.recherche.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.mert.recherche.services.MkDslGrammarAccess;

}
@parser::members {
	private MkDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MkDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
		(rule__Model__DeclarationsAssignment)*
		{ after(grammarAccess.getModelAccess().getDeclarationsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getESGParserRuleCall()); }
		ruleESG
		{ after(grammarAccess.getDeclarationAccess().getESGParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleESG
entryRuleESG
:
{ before(grammarAccess.getESGRule()); }
	 ruleESG
{ after(grammarAccess.getESGRule()); } 
	 EOF 
;

// Rule ESG
ruleESG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getESGAccess().getGroup()); }
		(rule__ESG__Group__0)
		{ after(grammarAccess.getESGAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVERTEX
entryRuleVERTEX
:
{ before(grammarAccess.getVERTEXRule()); }
	 ruleVERTEX
{ after(grammarAccess.getVERTEXRule()); } 
	 EOF 
;

// Rule VERTEX
ruleVERTEX 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVERTEXAccess().getGroup()); }
		(rule__VERTEX__Group__0)
		{ after(grammarAccess.getVERTEXAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEvent
entryRuleEvent
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventAccess().getNameAssignment()); }
		(rule__Event__NameAssignment)
		{ after(grammarAccess.getEventAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDGE
entryRuleEDGE
:
{ before(grammarAccess.getEDGERule()); }
	 ruleEDGE
{ after(grammarAccess.getEDGERule()); } 
	 EOF 
;

// Rule EDGE
ruleEDGE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDGEAccess().getGroup()); }
		(rule__EDGE__Group__0)
		{ after(grammarAccess.getEDGEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDT
entryRuleDT
:
{ before(grammarAccess.getDTRule()); }
	 ruleDT
{ after(grammarAccess.getDTRule()); } 
	 EOF 
;

// Rule DT
ruleDT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDTAccess().getGroup()); }
		(rule__DT__Group__0)
		{ after(grammarAccess.getDTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONDITION
entryRuleCONDITION
:
{ before(grammarAccess.getCONDITIONRule()); }
	 ruleCONDITION
{ after(grammarAccess.getCONDITIONRule()); } 
	 EOF 
;

// Rule CONDITION
ruleCONDITION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONDITIONAccess().getGroup()); }
		(rule__CONDITION__Group__0)
		{ after(grammarAccess.getCONDITIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRULE
entryRuleRULE
:
{ before(grammarAccess.getRULERule()); }
	 ruleRULE
{ after(grammarAccess.getRULERule()); } 
	 EOF 
;

// Rule RULE
ruleRULE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRULEAccess().getGroup()); }
		(rule__RULE__Group__0)
		{ after(grammarAccess.getRULEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleACTION
entryRuleACTION
:
{ before(grammarAccess.getACTIONRule()); }
	 ruleACTION
{ after(grammarAccess.getACTIONRule()); } 
	 EOF 
;

// Rule ACTION
ruleACTION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getACTIONAccess().getGroup()); }
		(rule__ACTION__Group__0)
		{ after(grammarAccess.getACTIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEVALUABLE
entryRuleEVALUABLE
:
{ before(grammarAccess.getEVALUABLERule()); }
	 ruleEVALUABLE
{ after(grammarAccess.getEVALUABLERule()); } 
	 EOF 
;

// Rule EVALUABLE
ruleEVALUABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEVALUABLEAccess().getAlternatives()); }
		(rule__EVALUABLE__Alternatives)
		{ after(grammarAccess.getEVALUABLEAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEXPRESSION
entryRuleEXPRESSION
:
{ before(grammarAccess.getEXPRESSIONRule()); }
	 ruleEXPRESSION
{ after(grammarAccess.getEXPRESSIONRule()); } 
	 EOF 
;

// Rule EXPRESSION
ruleEXPRESSION 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEXPRESSIONAccess().getGroup()); }
		(rule__EXPRESSION__Group__0)
		{ after(grammarAccess.getEXPRESSIONAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONNECTIVE
entryRuleCONNECTIVE
:
{ before(grammarAccess.getCONNECTIVERule()); }
	 ruleCONNECTIVE
{ after(grammarAccess.getCONNECTIVERule()); } 
	 EOF 
;

// Rule CONNECTIVE
ruleCONNECTIVE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONNECTIVEAccess().getConnectiveAssignment()); }
		(rule__CONNECTIVE__ConnectiveAssignment)
		{ after(grammarAccess.getCONNECTIVEAccess().getConnectiveAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVARIABLE
entryRuleVARIABLE
:
{ before(grammarAccess.getVARIABLERule()); }
	 ruleVARIABLE
{ after(grammarAccess.getVARIABLERule()); } 
	 EOF 
;

// Rule VARIABLE
ruleVARIABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVARIABLEAccess().getGroup()); }
		(rule__VARIABLE__Group__0)
		{ after(grammarAccess.getVARIABLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOPERAND
entryRuleOPERAND
:
{ before(grammarAccess.getOPERANDRule()); }
	 ruleOPERAND
{ after(grammarAccess.getOPERANDRule()); } 
	 EOF 
;

// Rule OPERAND
ruleOPERAND 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandAssignment()); }
		(rule__OPERAND__OperandAssignment)
		{ after(grammarAccess.getOPERANDAccess().getOperandAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLITERAL
entryRuleLITERAL
:
{ before(grammarAccess.getLITERALRule()); }
	 ruleLITERAL
{ after(grammarAccess.getLITERALRule()); } 
	 EOF 
;

// Rule LITERAL
ruleLITERAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLITERALAccess().getAlternatives()); }
		(rule__LITERAL__Alternatives)
		{ after(grammarAccess.getLITERALAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOLOR
entryRuleCOLOR
:
{ before(grammarAccess.getCOLORRule()); }
	 ruleCOLOR
{ after(grammarAccess.getCOLORRule()); } 
	 EOF 
;

// Rule COLOR
ruleCOLOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOLORAccess().getNameAssignment()); }
		(rule__COLOR__NameAssignment)
		{ after(grammarAccess.getCOLORAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__SubESGsAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_3_0_0()); }
		ruleVERTEX
		{ after(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_3_0_1()); }
		ruleESG
		{ after(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__SubESGsAlternatives_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_4_1_0_0()); }
		ruleVERTEX
		{ after(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_4_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_4_1_0_1()); }
		ruleESG
		{ after(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_4_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EVALUABLE__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEVALUABLEAccess().getEXPRESSIONParserRuleCall_0()); }
		ruleEXPRESSION
		{ after(grammarAccess.getEVALUABLEAccess().getEXPRESSIONParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEVALUABLEAccess().getCONNECTIVEParserRuleCall_1()); }
		ruleCONNECTIVE
		{ after(grammarAccess.getEVALUABLEAccess().getCONNECTIVEParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONNECTIVE__ConnectiveAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONNECTIVEAccess().getConnectiveANDKeyword_0_0()); }
		'AND'
		{ after(grammarAccess.getCONNECTIVEAccess().getConnectiveANDKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCONNECTIVEAccess().getConnectiveORKeyword_0_1()); }
		'OR'
		{ after(grammarAccess.getCONNECTIVEAccess().getConnectiveORKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OPERAND__OperandAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandLessThanSGnKeyword_0_0()); }
		'<'
		{ after(grammarAccess.getOPERANDAccess().getOperandLessThanSGnKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandLessThanSGnEqualsSGnKeyword_0_1()); }
		'<='
		{ after(grammarAccess.getOPERANDAccess().getOperandLessThanSGnEqualsSGnKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandEqualsSGnEqualsSGnKeyword_0_2()); }
		'=='
		{ after(grammarAccess.getOPERANDAccess().getOperandEqualsSGnEqualsSGnKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnEqualsSGnKeyword_0_3()); }
		'>='
		{ after(grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnEqualsSGnKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnKeyword_0_4()); }
		'>'
		{ after(grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LITERAL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLITERALAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getLITERALAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COLOR__NameAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getNameBlackKeyword_0_0()); }
		'black'
		{ after(grammarAccess.getCOLORAccess().getNameBlackKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getNameRedKeyword_0_1()); }
		'red'
		{ after(grammarAccess.getCOLORAccess().getNameRedKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getNameGreenKeyword_0_2()); }
		'green'
		{ after(grammarAccess.getCOLORAccess().getNameGreenKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getNameBlueKeyword_0_3()); }
		'blue'
		{ after(grammarAccess.getCOLORAccess().getNameBlueKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getCOLORAccess().getNameOrangeKeyword_0_4()); }
		'orange'
		{ after(grammarAccess.getCOLORAccess().getNameOrangeKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__0__Impl
	rule__ESG__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getESGKeyword_0()); }
	'ESG'
	{ after(grammarAccess.getESGAccess().getESGKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__1__Impl
	rule__ESG__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getNameAssignment_1()); }
	(rule__ESG__NameAssignment_1)
	{ after(grammarAccess.getESGAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__2__Impl
	rule__ESG__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getGroup_2()); }
	(rule__ESG__Group_2__0)?
	{ after(grammarAccess.getESGAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__3__Impl
	rule__ESG__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getSubESGsAssignment_3()); }
	(rule__ESG__SubESGsAssignment_3)
	{ after(grammarAccess.getESGAccess().getSubESGsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__4__Impl
	rule__ESG__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getGroup_4()); }
	(rule__ESG__Group_4__0)*
	{ after(grammarAccess.getESGAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__5__Impl
	rule__ESG__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getEdgesAssignment_5()); }
	(rule__ESG__EdgesAssignment_5)
	{ after(grammarAccess.getESGAccess().getEdgesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getGroup_6()); }
	(rule__ESG__Group_6__0)*
	{ after(grammarAccess.getESGAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ESG__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_2__0__Impl
	rule__ESG__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getEventKeyword_2_0()); }
	'Event'
	{ after(grammarAccess.getESGAccess().getEventKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getEventAssignment_2_1()); }
	(rule__ESG__EventAssignment_2_1)
	{ after(grammarAccess.getESGAccess().getEventAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ESG__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_4__0__Impl
	rule__ESG__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getESGAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getSubESGsAssignment_4_1()); }
	(rule__ESG__SubESGsAssignment_4_1)
	{ after(grammarAccess.getESGAccess().getSubESGsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ESG__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_6__0__Impl
	rule__ESG__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getESGAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ESG__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getESGAccess().getEdgesAssignment_6_1()); }
	(rule__ESG__EdgesAssignment_6_1)
	{ after(grammarAccess.getESGAccess().getEdgesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VERTEX__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__0__Impl
	rule__VERTEX__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getVertexKeyword_0()); }
	'Vertex'
	{ after(grammarAccess.getVERTEXAccess().getVertexKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__1__Impl
	rule__VERTEX__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getIDKeyword_1()); }
	'ID'
	{ after(grammarAccess.getVERTEXAccess().getIDKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__2__Impl
	rule__VERTEX__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getIDAssignment_2()); }
	(rule__VERTEX__IDAssignment_2)
	{ after(grammarAccess.getVERTEXAccess().getIDAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__3__Impl
	rule__VERTEX__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getEventKeyword_3()); }
	'Event'
	{ after(grammarAccess.getVERTEXAccess().getEventKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__4__Impl
	rule__VERTEX__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getEventAssignment_4()); }
	(rule__VERTEX__EventAssignment_4)
	{ after(grammarAccess.getVERTEXAccess().getEventAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__5__Impl
	rule__VERTEX__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getGroup_5()); }
	(rule__VERTEX__Group_5__0)?
	{ after(grammarAccess.getVERTEXAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getDtAssignment_6()); }
	(rule__VERTEX__DtAssignment_6)?
	{ after(grammarAccess.getVERTEXAccess().getDtAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VERTEX__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group_5__0__Impl
	rule__VERTEX__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getColorKeyword_5_0()); }
	'Color'
	{ after(grammarAccess.getVERTEXAccess().getColorKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VERTEX__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVERTEXAccess().getColorAssignment_5_1()); }
	(rule__VERTEX__ColorAssignment_5_1)
	{ after(grammarAccess.getVERTEXAccess().getColorAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDGE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__0__Impl
	rule__EDGE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getEdgeKeyword_0()); }
	'Edge'
	{ after(grammarAccess.getEDGEAccess().getEdgeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__1__Impl
	rule__EDGE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getNameAssignment_1()); }
	(rule__EDGE__NameAssignment_1)
	{ after(grammarAccess.getEDGEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__2__Impl
	rule__EDGE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getSourceKeyword_2()); }
	'Source'
	{ after(grammarAccess.getEDGEAccess().getSourceKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__3__Impl
	rule__EDGE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getSourceAssignment_3()); }
	(rule__EDGE__SourceAssignment_3)
	{ after(grammarAccess.getEDGEAccess().getSourceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__4__Impl
	rule__EDGE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getTargetKeyword_4()); }
	'Target'
	{ after(grammarAccess.getEDGEAccess().getTargetKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__5__Impl
	rule__EDGE__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getTargetAssignment_5()); }
	(rule__EDGE__TargetAssignment_5)
	{ after(grammarAccess.getEDGEAccess().getTargetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getGroup_6()); }
	(rule__EDGE__Group_6__0)?
	{ after(grammarAccess.getEDGEAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDGE__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group_6__0__Impl
	rule__EDGE__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getColorKeyword_6_0()); }
	'Color'
	{ after(grammarAccess.getEDGEAccess().getColorKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDGE__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDGEAccess().getColorAssignment_6_1()); }
	(rule__EDGE__ColorAssignment_6_1)
	{ after(grammarAccess.getEDGEAccess().getColorAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__0__Impl
	rule__DT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getDTKeyword_0()); }
	'DT'
	{ after(grammarAccess.getDTAccess().getDTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__1__Impl
	rule__DT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getNameAssignment_1()); }
	(rule__DT__NameAssignment_1)
	{ after(grammarAccess.getDTAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__2__Impl
	rule__DT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getIDKeyword_2()); }
	'ID'
	{ after(grammarAccess.getDTAccess().getIDKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__3__Impl
	rule__DT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getIDAssignment_3()); }
	(rule__DT__IDAssignment_3)
	{ after(grammarAccess.getDTAccess().getIDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__4__Impl
	rule__DT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getConditionsAssignment_4()); }
	(rule__DT__ConditionsAssignment_4)
	{ after(grammarAccess.getDTAccess().getConditionsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__5__Impl
	rule__DT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getGroup_5()); }
	(rule__DT__Group_5__0)*
	{ after(grammarAccess.getDTAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__6__Impl
	rule__DT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getActionsAssignment_6()); }
	(rule__DT__ActionsAssignment_6)
	{ after(grammarAccess.getDTAccess().getActionsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__7__Impl
	rule__DT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getGroup_7()); }
	(rule__DT__Group_7__0)*
	{ after(grammarAccess.getDTAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__8__Impl
	rule__DT__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getRulesAssignment_8()); }
	(rule__DT__RulesAssignment_8)
	{ after(grammarAccess.getDTAccess().getRulesAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getGroup_9()); }
	(rule__DT__Group_9__0)*
	{ after(grammarAccess.getDTAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DT__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_5__0__Impl
	rule__DT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getDTAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getConditionsAssignment_5_1()); }
	(rule__DT__ConditionsAssignment_5_1)
	{ after(grammarAccess.getDTAccess().getConditionsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DT__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_7__0__Impl
	rule__DT__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getDTAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getActionsAssignment_7_1()); }
	(rule__DT__ActionsAssignment_7_1)
	{ after(grammarAccess.getDTAccess().getActionsAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DT__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_9__0__Impl
	rule__DT__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getDTAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DT__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDTAccess().getRulesAssignment_9_1()); }
	(rule__DT__RulesAssignment_9_1)
	{ after(grammarAccess.getDTAccess().getRulesAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CONDITION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITION__Group__0__Impl
	rule__CONDITION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONAccess().getConditionKeyword_0()); }
	'Condition'
	{ after(grammarAccess.getCONDITIONAccess().getConditionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITION__Group__1__Impl
	rule__CONDITION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONAccess().getNameAssignment_1()); }
	(rule__CONDITION__NameAssignment_1)
	{ after(grammarAccess.getCONDITIONAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITION__Group__2__Impl
	rule__CONDITION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONAccess().getEvalsAssignment_2()); }
	(rule__CONDITION__EvalsAssignment_2)
	{ after(grammarAccess.getCONDITIONAccess().getEvalsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CONDITION__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCONDITIONAccess().getEvalsAssignment_3()); }
	(rule__CONDITION__EvalsAssignment_3)*
	{ after(grammarAccess.getCONDITIONAccess().getEvalsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RULE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__0__Impl
	rule__RULE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getRuleKeyword_0()); }
	'Rule'
	{ after(grammarAccess.getRULEAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__1__Impl
	rule__RULE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getNameAssignment_1()); }
	(rule__RULE__NameAssignment_1)
	{ after(grammarAccess.getRULEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__2__Impl
	rule__RULE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getIDKeyword_2()); }
	'ID'
	{ after(grammarAccess.getRULEAccess().getIDKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__3__Impl
	rule__RULE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getIDAssignment_3()); }
	(rule__RULE__IDAssignment_3)
	{ after(grammarAccess.getRULEAccess().getIDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__4__Impl
	rule__RULE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getValueKeyword_4()); }
	'value'
	{ after(grammarAccess.getRULEAccess().getValueKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__5__Impl
	rule__RULE__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getValueAssignment_5()); }
	(rule__RULE__ValueAssignment_5)
	{ after(grammarAccess.getRULEAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__6__Impl
	rule__RULE__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getVariablesKeyword_6()); }
	'variables'
	{ after(grammarAccess.getRULEAccess().getVariablesKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__7__Impl
	rule__RULE__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getVarsAssignment_7()); }
	(rule__RULE__VarsAssignment_7)
	{ after(grammarAccess.getRULEAccess().getVarsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__8__Impl
	rule__RULE__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getGroup_8()); }
	(rule__RULE__Group_8__0)*
	{ after(grammarAccess.getRULEAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__9__Impl
	rule__RULE__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getActionsKeyword_9()); }
	'actions'
	{ after(grammarAccess.getRULEAccess().getActionsKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__10__Impl
	rule__RULE__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getActionsAssignment_10()); }
	(rule__RULE__ActionsAssignment_10)
	{ after(grammarAccess.getRULEAccess().getActionsAssignment_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getGroup_11()); }
	(rule__RULE__Group_11__0)*
	{ after(grammarAccess.getRULEAccess().getGroup_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RULE__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group_8__0__Impl
	rule__RULE__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getRULEAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getVarsAssignment_8_1()); }
	(rule__RULE__VarsAssignment_8_1)
	{ after(grammarAccess.getRULEAccess().getVarsAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RULE__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group_11__0__Impl
	rule__RULE__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getCommaKeyword_11_0()); }
	','
	{ after(grammarAccess.getRULEAccess().getCommaKeyword_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RULE__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRULEAccess().getActionsAssignment_11_1()); }
	(rule__RULE__ActionsAssignment_11_1)
	{ after(grammarAccess.getRULEAccess().getActionsAssignment_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ACTION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__0__Impl
	rule__ACTION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getActionKeyword_0()); }
	'Action'
	{ after(grammarAccess.getACTIONAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__1__Impl
	rule__ACTION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getNameAssignment_1()); }
	(rule__ACTION__NameAssignment_1)
	{ after(grammarAccess.getACTIONAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__2__Impl
	rule__ACTION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getIDKeyword_2()); }
	'ID'
	{ after(grammarAccess.getACTIONAccess().getIDKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__3__Impl
	rule__ACTION__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getIDAssignment_3()); }
	(rule__ACTION__IDAssignment_3)
	{ after(grammarAccess.getACTIONAccess().getIDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__4__Impl
	rule__ACTION__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getEventKeyword_4()); }
	'event'
	{ after(grammarAccess.getACTIONAccess().getEventKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ACTION__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getACTIONAccess().getEventAssignment_5()); }
	(rule__ACTION__EventAssignment_5)
	{ after(grammarAccess.getACTIONAccess().getEventAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EXPRESSION__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSION__Group__0__Impl
	rule__EXPRESSION__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSIONAccess().getLeftParenthesSKeyword_0()); }
	'('
	{ after(grammarAccess.getEXPRESSIONAccess().getLeftParenthesSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSION__Group__1__Impl
	rule__EXPRESSION__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSIONAccess().getLeftAssignment_1()); }
	(rule__EXPRESSION__LeftAssignment_1)
	{ after(grammarAccess.getEXPRESSIONAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSION__Group__2__Impl
	rule__EXPRESSION__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSIONAccess().getOperandAssignment_2()); }
	(rule__EXPRESSION__OperandAssignment_2)?
	{ after(grammarAccess.getEXPRESSIONAccess().getOperandAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSION__Group__3__Impl
	rule__EXPRESSION__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSIONAccess().getRightAssignment_3()); }
	(rule__EXPRESSION__RightAssignment_3)?
	{ after(grammarAccess.getEXPRESSIONAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EXPRESSION__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEXPRESSIONAccess().getRGhtParenthesSKeyword_4()); }
	')'
	{ after(grammarAccess.getEXPRESSIONAccess().getRGhtParenthesSKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VARIABLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__0__Impl
	rule__VARIABLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVARIABLEAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__1__Impl
	rule__VARIABLE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getNameAssignment_1()); }
	(rule__VARIABLE__NameAssignment_1)
	{ after(grammarAccess.getVARIABLEAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__2__Impl
	rule__VARIABLE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getVARIABLEAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VARIABLE__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVARIABLEAccess().getValueAssignment_3()); }
	(rule__VARIABLE__ValueAssignment_3)
	{ after(grammarAccess.getVARIABLEAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DeclarationsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
		ruleDeclaration
		{ after(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getESGAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__EventAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getEventEventParserRuleCall_2_1_0()); }
		ruleEvent
		{ after(grammarAccess.getESGAccess().getEventEventParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__SubESGsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getSubESGsAlternatives_3_0()); }
		(rule__ESG__SubESGsAlternatives_3_0)
		{ after(grammarAccess.getESGAccess().getSubESGsAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__SubESGsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getSubESGsAlternatives_4_1_0()); }
		(rule__ESG__SubESGsAlternatives_4_1_0)
		{ after(grammarAccess.getESGAccess().getSubESGsAlternatives_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__EdgesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_5_0()); }
		ruleEDGE
		{ after(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ESG__EdgesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_6_1_0()); }
		ruleEDGE
		{ after(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__IDAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVERTEXAccess().getIDSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getVERTEXAccess().getIDSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__EventAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVERTEXAccess().getEventEventParserRuleCall_4_0()); }
		ruleEvent
		{ after(grammarAccess.getVERTEXAccess().getEventEventParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__ColorAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVERTEXAccess().getColorCOLORParserRuleCall_5_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getVERTEXAccess().getColorCOLORParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VERTEX__DtAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVERTEXAccess().getDtDTParserRuleCall_6_0()); }
		ruleDT
		{ after(grammarAccess.getVERTEXAccess().getDtDTParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDGEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getEDGEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__SourceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDGEAccess().getSourceINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getEDGEAccess().getSourceINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__TargetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDGEAccess().getTargetINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getEDGEAccess().getTargetINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDGE__ColorAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDGEAccess().getColorCOLORParserRuleCall_6_1_0()); }
		ruleCOLOR
		{ after(grammarAccess.getEDGEAccess().getColorCOLORParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDTAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__IDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getIDINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getDTAccess().getIDINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__ConditionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_4_0()); }
		ruleCONDITION
		{ after(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__ConditionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_5_1_0()); }
		ruleCONDITION
		{ after(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__ActionsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_6_0()); }
		ruleACTION
		{ after(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__ActionsAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_7_1_0()); }
		ruleACTION
		{ after(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__RulesAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_8_0()); }
		ruleRULE
		{ after(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DT__RulesAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_9_1_0()); }
		ruleRULE
		{ after(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONDITIONAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getCONDITIONAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__EvalsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_2_0()); }
		ruleEVALUABLE
		{ after(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONDITION__EvalsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_3_0()); }
		ruleEVALUABLE
		{ after(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getRULEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__IDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getIDINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getRULEAccess().getIDINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getValueSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getRULEAccess().getValueSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__VarsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_7_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__VarsAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_8_1_0()); }
		ruleVARIABLE
		{ after(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__ActionsAssignment_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getActionsACTIONCrossReference_10_0()); }
		(
			{ before(grammarAccess.getRULEAccess().getActionsACTIONIDTerminalRuleCall_10_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRULEAccess().getActionsACTIONIDTerminalRuleCall_10_0_1()); }
		)
		{ after(grammarAccess.getRULEAccess().getActionsACTIONCrossReference_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RULE__ActionsAssignment_11_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRULEAccess().getActionsACTIONCrossReference_11_1_0()); }
		(
			{ before(grammarAccess.getRULEAccess().getActionsACTIONIDTerminalRuleCall_11_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRULEAccess().getActionsACTIONIDTerminalRuleCall_11_1_0_1()); }
		)
		{ after(grammarAccess.getRULEAccess().getActionsACTIONCrossReference_11_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACTIONAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getACTIONAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__IDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACTIONAccess().getIDSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getACTIONAccess().getIDSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ACTION__EventAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getACTIONAccess().getEventINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getACTIONAccess().getEventINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSIONAccess().getLeftLITERALParserRuleCall_1_0()); }
		ruleLITERAL
		{ after(grammarAccess.getEXPRESSIONAccess().getLeftLITERALParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__OperandAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSIONAccess().getOperandOPERANDParserRuleCall_2_0()); }
		ruleOPERAND
		{ after(grammarAccess.getEXPRESSIONAccess().getOperandOPERANDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EXPRESSION__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEXPRESSIONAccess().getRightLITERALParserRuleCall_3_0()); }
		ruleLITERAL
		{ after(grammarAccess.getEXPRESSIONAccess().getRightLITERALParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CONNECTIVE__ConnectiveAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCONNECTIVEAccess().getConnectiveAlternatives_0()); }
		(rule__CONNECTIVE__ConnectiveAlternatives_0)
		{ after(grammarAccess.getCONNECTIVEAccess().getConnectiveAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVARIABLEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVARIABLEAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VARIABLE__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVARIABLEAccess().getValueLITERALParserRuleCall_3_0()); }
		ruleLITERAL
		{ after(grammarAccess.getVARIABLEAccess().getValueLITERALParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OPERAND__OperandAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOPERANDAccess().getOperandAlternatives_0()); }
		(rule__OPERAND__OperandAlternatives_0)
		{ after(grammarAccess.getOPERANDAccess().getOperandAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__COLOR__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCOLORAccess().getNameAlternatives_0()); }
		(rule__COLOR__NameAlternatives_0)
		{ after(grammarAccess.getCOLORAccess().getNameAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
