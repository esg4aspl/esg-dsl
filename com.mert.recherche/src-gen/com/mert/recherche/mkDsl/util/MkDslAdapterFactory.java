/**
 * generated by Xtext 2.25.0
 */
package com.mert.recherche.mkDsl.util;

import com.mert.recherche.mkDsl.*;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see com.mert.recherche.mkDsl.MkDslPackage
 * @generated
 */
public class MkDslAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static MkDslPackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MkDslAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = MkDslPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MkDslSwitch<Adapter> modelSwitch =
    new MkDslSwitch<Adapter>()
    {
      @Override
      public Adapter caseModel(Model object)
      {
        return createModelAdapter();
      }
      @Override
      public Adapter caseDeclaration(Declaration object)
      {
        return createDeclarationAdapter();
      }
      @Override
      public Adapter caseESG(ESG object)
      {
        return createESGAdapter();
      }
      @Override
      public Adapter caseVERTEX(VERTEX object)
      {
        return createVERTEXAdapter();
      }
      @Override
      public Adapter caseEvent(Event object)
      {
        return createEventAdapter();
      }
      @Override
      public Adapter caseEDGE(EDGE object)
      {
        return createEDGEAdapter();
      }
      @Override
      public Adapter caseDT(DT object)
      {
        return createDTAdapter();
      }
      @Override
      public Adapter caseCONDITION(CONDITION object)
      {
        return createCONDITIONAdapter();
      }
      @Override
      public Adapter caseRULE(RULE object)
      {
        return createRULEAdapter();
      }
      @Override
      public Adapter caseACTION(ACTION object)
      {
        return createACTIONAdapter();
      }
      @Override
      public Adapter caseEVALUABLE(EVALUABLE object)
      {
        return createEVALUABLEAdapter();
      }
      @Override
      public Adapter caseEXPRESSION(EXPRESSION object)
      {
        return createEXPRESSIONAdapter();
      }
      @Override
      public Adapter caseCONNECTIVE(CONNECTIVE object)
      {
        return createCONNECTIVEAdapter();
      }
      @Override
      public Adapter caseVARIABLE(VARIABLE object)
      {
        return createVARIABLEAdapter();
      }
      @Override
      public Adapter caseOPERAND(OPERAND object)
      {
        return createOPERANDAdapter();
      }
      @Override
      public Adapter caseCOLOR(COLOR object)
      {
        return createCOLORAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.Model
   * @generated
   */
  public Adapter createModelAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.Declaration <em>Declaration</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.Declaration
   * @generated
   */
  public Adapter createDeclarationAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.ESG <em>ESG</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.ESG
   * @generated
   */
  public Adapter createESGAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.VERTEX <em>VERTEX</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.VERTEX
   * @generated
   */
  public Adapter createVERTEXAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.Event <em>Event</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.Event
   * @generated
   */
  public Adapter createEventAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.EDGE <em>EDGE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.EDGE
   * @generated
   */
  public Adapter createEDGEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.DT <em>DT</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.DT
   * @generated
   */
  public Adapter createDTAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.CONDITION <em>CONDITION</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.CONDITION
   * @generated
   */
  public Adapter createCONDITIONAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.RULE <em>RULE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.RULE
   * @generated
   */
  public Adapter createRULEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.ACTION <em>ACTION</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.ACTION
   * @generated
   */
  public Adapter createACTIONAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.EVALUABLE <em>EVALUABLE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.EVALUABLE
   * @generated
   */
  public Adapter createEVALUABLEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.EXPRESSION <em>EXPRESSION</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.EXPRESSION
   * @generated
   */
  public Adapter createEXPRESSIONAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.CONNECTIVE <em>CONNECTIVE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.CONNECTIVE
   * @generated
   */
  public Adapter createCONNECTIVEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.VARIABLE <em>VARIABLE</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.VARIABLE
   * @generated
   */
  public Adapter createVARIABLEAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.OPERAND <em>OPERAND</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.OPERAND
   * @generated
   */
  public Adapter createOPERANDAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.mert.recherche.mkDsl.COLOR <em>COLOR</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see com.mert.recherche.mkDsl.COLOR
   * @generated
   */
  public Adapter createCOLORAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //MkDslAdapterFactory
