/*
 * generated by Xtext 2.25.0
 */
grammar InternalMkDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.mert.recherche.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.mert.recherche.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.mert.recherche.services.MkDslGrammarAccess;

}

@parser::members {

 	private MkDslGrammarAccess grammarAccess;

    public InternalMkDslParser(TokenStream input, MkDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MkDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDeclarationsDeclarationParserRuleCall_0());
			}
			lv_declarations_0_0=ruleDeclaration
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"declarations",
					lv_declarations_0_0,
					"com.mert.recherche.MkDsl.Declaration");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDeclarationAccess().getESGParserRuleCall());
	}
	this_ESG_0=ruleESG
	{
		$current = $this_ESG_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleESG
entryRuleESG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getESGRule()); }
	iv_ruleESG=ruleESG
	{ $current=$iv_ruleESG.current; }
	EOF;

// Rule ESG
ruleESG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ESG'
		{
			newLeafNode(otherlv_0, grammarAccess.getESGAccess().getESGKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getESGAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getESGRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='Event'
			{
				newLeafNode(otherlv_2, grammarAccess.getESGAccess().getEventKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getESGAccess().getEventEventParserRuleCall_2_1_0());
					}
					lv_event_3_0=ruleEvent
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getESGRule());
						}
						set(
							$current,
							"event",
							lv_event_3_0,
							"com.mert.recherche.MkDsl.Event");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_3_0_0());
					}
					lv_subESGs_4_1=ruleVERTEX
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getESGRule());
						}
						add(
							$current,
							"subESGs",
							lv_subESGs_4_1,
							"com.mert.recherche.MkDsl.VERTEX");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_3_0_1());
					}
					lv_subESGs_4_2=ruleESG
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getESGRule());
						}
						add(
							$current,
							"subESGs",
							lv_subESGs_4_2,
							"com.mert.recherche.MkDsl.ESG");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getESGAccess().getCommaKeyword_4_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getESGAccess().getSubESGsVERTEXParserRuleCall_4_1_0_0());
						}
						lv_subESGs_6_1=ruleVERTEX
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getESGRule());
							}
							add(
								$current,
								"subESGs",
								lv_subESGs_6_1,
								"com.mert.recherche.MkDsl.VERTEX");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getESGAccess().getSubESGsESGParserRuleCall_4_1_0_1());
						}
						lv_subESGs_6_2=ruleESG
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getESGRule());
							}
							add(
								$current,
								"subESGs",
								lv_subESGs_6_2,
								"com.mert.recherche.MkDsl.ESG");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_5_0());
				}
				lv_edges_7_0=ruleEDGE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getESGRule());
					}
					add(
						$current,
						"edges",
						lv_edges_7_0,
						"com.mert.recherche.MkDsl.EDGE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getESGAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getESGAccess().getEdgesEDGEParserRuleCall_6_1_0());
					}
					lv_edges_9_0=ruleEDGE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getESGRule());
						}
						add(
							$current,
							"edges",
							lv_edges_9_0,
							"com.mert.recherche.MkDsl.EDGE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleVERTEX
entryRuleVERTEX returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVERTEXRule()); }
	iv_ruleVERTEX=ruleVERTEX
	{ $current=$iv_ruleVERTEX.current; }
	EOF;

// Rule VERTEX
ruleVERTEX returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Vertex'
		{
			newLeafNode(otherlv_0, grammarAccess.getVERTEXAccess().getVertexKeyword_0());
		}
		otherlv_1='ID'
		{
			newLeafNode(otherlv_1, grammarAccess.getVERTEXAccess().getIDKeyword_1());
		}
		(
			(
				lv_ID_2_0=RULE_STRING
				{
					newLeafNode(lv_ID_2_0, grammarAccess.getVERTEXAccess().getIDSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVERTEXRule());
					}
					setWithLastConsumed(
						$current,
						"ID",
						lv_ID_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='Event'
		{
			newLeafNode(otherlv_3, grammarAccess.getVERTEXAccess().getEventKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVERTEXAccess().getEventEventParserRuleCall_4_0());
				}
				lv_event_4_0=ruleEvent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVERTEXRule());
					}
					set(
						$current,
						"event",
						lv_event_4_0,
						"com.mert.recherche.MkDsl.Event");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='Color'
			{
				newLeafNode(otherlv_5, grammarAccess.getVERTEXAccess().getColorKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVERTEXAccess().getColorCOLORParserRuleCall_5_1_0());
					}
					lv_color_6_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVERTEXRule());
						}
						set(
							$current,
							"color",
							lv_color_6_0,
							"com.mert.recherche.MkDsl.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getVERTEXAccess().getDtDTParserRuleCall_6_0());
				}
				lv_dt_7_0=ruleDT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVERTEXRule());
					}
					set(
						$current,
						"dt",
						lv_dt_7_0,
						"com.mert.recherche.MkDsl.DT");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEventAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEventRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleEDGE
entryRuleEDGE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEDGERule()); }
	iv_ruleEDGE=ruleEDGE
	{ $current=$iv_ruleEDGE.current; }
	EOF;

// Rule EDGE
ruleEDGE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Edge'
		{
			newLeafNode(otherlv_0, grammarAccess.getEDGEAccess().getEdgeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEDGEAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEDGERule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='Source'
		{
			newLeafNode(otherlv_2, grammarAccess.getEDGEAccess().getSourceKeyword_2());
		}
		(
			(
				lv_source_3_0=RULE_INT
				{
					newLeafNode(lv_source_3_0, grammarAccess.getEDGEAccess().getSourceINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEDGERule());
					}
					setWithLastConsumed(
						$current,
						"source",
						lv_source_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='Target'
		{
			newLeafNode(otherlv_4, grammarAccess.getEDGEAccess().getTargetKeyword_4());
		}
		(
			(
				lv_target_5_0=RULE_INT
				{
					newLeafNode(lv_target_5_0, grammarAccess.getEDGEAccess().getTargetINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEDGERule());
					}
					setWithLastConsumed(
						$current,
						"target",
						lv_target_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			otherlv_6='Color'
			{
				newLeafNode(otherlv_6, grammarAccess.getEDGEAccess().getColorKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEDGEAccess().getColorCOLORParserRuleCall_6_1_0());
					}
					lv_color_7_0=ruleCOLOR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEDGERule());
						}
						set(
							$current,
							"color",
							lv_color_7_0,
							"com.mert.recherche.MkDsl.COLOR");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDT
entryRuleDT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDTRule()); }
	iv_ruleDT=ruleDT
	{ $current=$iv_ruleDT.current; }
	EOF;

// Rule DT
ruleDT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DT'
		{
			newLeafNode(otherlv_0, grammarAccess.getDTAccess().getDTKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDTAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDTRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='ID'
		{
			newLeafNode(otherlv_2, grammarAccess.getDTAccess().getIDKeyword_2());
		}
		(
			(
				lv_ID_3_0=RULE_INT
				{
					newLeafNode(lv_ID_3_0, grammarAccess.getDTAccess().getIDINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDTRule());
					}
					setWithLastConsumed(
						$current,
						"ID",
						lv_ID_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_4_0());
				}
				lv_conditions_4_0=ruleCONDITION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDTRule());
					}
					add(
						$current,
						"conditions",
						lv_conditions_4_0,
						"com.mert.recherche.MkDsl.CONDITION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getDTAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDTAccess().getConditionsCONDITIONParserRuleCall_5_1_0());
					}
					lv_conditions_6_0=ruleCONDITION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDTRule());
						}
						add(
							$current,
							"conditions",
							lv_conditions_6_0,
							"com.mert.recherche.MkDsl.CONDITION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_6_0());
				}
				lv_actions_7_0=ruleACTION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDTRule());
					}
					add(
						$current,
						"actions",
						lv_actions_7_0,
						"com.mert.recherche.MkDsl.ACTION");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getDTAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDTAccess().getActionsACTIONParserRuleCall_7_1_0());
					}
					lv_actions_9_0=ruleACTION
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDTRule());
						}
						add(
							$current,
							"actions",
							lv_actions_9_0,
							"com.mert.recherche.MkDsl.ACTION");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_8_0());
				}
				lv_rules_10_0=ruleRULE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDTRule());
					}
					add(
						$current,
						"rules",
						lv_rules_10_0,
						"com.mert.recherche.MkDsl.RULE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getDTAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDTAccess().getRulesRULEParserRuleCall_9_1_0());
					}
					lv_rules_12_0=ruleRULE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDTRule());
						}
						add(
							$current,
							"rules",
							lv_rules_12_0,
							"com.mert.recherche.MkDsl.RULE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCONDITION
entryRuleCONDITION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCONDITIONRule()); }
	iv_ruleCONDITION=ruleCONDITION
	{ $current=$iv_ruleCONDITION.current; }
	EOF;

// Rule CONDITION
ruleCONDITION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Condition'
		{
			newLeafNode(otherlv_0, grammarAccess.getCONDITIONAccess().getConditionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_INT
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCONDITIONAccess().getNameINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCONDITIONRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_2_0());
				}
				lv_evals_2_0=ruleEVALUABLE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCONDITIONRule());
					}
					add(
						$current,
						"evals",
						lv_evals_2_0,
						"com.mert.recherche.MkDsl.EVALUABLE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCONDITIONAccess().getEvalsEVALUABLEParserRuleCall_3_0());
				}
				lv_evals_3_0=ruleEVALUABLE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCONDITIONRule());
					}
					add(
						$current,
						"evals",
						lv_evals_3_0,
						"com.mert.recherche.MkDsl.EVALUABLE");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRULE
entryRuleRULE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRULERule()); }
	iv_ruleRULE=ruleRULE
	{ $current=$iv_ruleRULE.current; }
	EOF;

// Rule RULE
ruleRULE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getRULEAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRULEAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRULERule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='ID'
		{
			newLeafNode(otherlv_2, grammarAccess.getRULEAccess().getIDKeyword_2());
		}
		(
			(
				lv_ID_3_0=RULE_INT
				{
					newLeafNode(lv_ID_3_0, grammarAccess.getRULEAccess().getIDINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRULERule());
					}
					setWithLastConsumed(
						$current,
						"ID",
						lv_ID_3_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_4='value'
		{
			newLeafNode(otherlv_4, grammarAccess.getRULEAccess().getValueKeyword_4());
		}
		(
			(
				lv_value_5_0=RULE_STRING
				{
					newLeafNode(lv_value_5_0, grammarAccess.getRULEAccess().getValueSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRULERule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='variables'
		{
			newLeafNode(otherlv_6, grammarAccess.getRULEAccess().getVariablesKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_7_0());
				}
				lv_vars_7_0=ruleVARIABLE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRULERule());
					}
					add(
						$current,
						"vars",
						lv_vars_7_0,
						"com.mert.recherche.MkDsl.VARIABLE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getRULEAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRULEAccess().getVarsVARIABLEParserRuleCall_8_1_0());
					}
					lv_vars_9_0=ruleVARIABLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRULERule());
						}
						add(
							$current,
							"vars",
							lv_vars_9_0,
							"com.mert.recherche.MkDsl.VARIABLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10='actions'
		{
			newLeafNode(otherlv_10, grammarAccess.getRULEAccess().getActionsKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRULERule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getRULEAccess().getActionsACTIONCrossReference_10_0());
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getRULEAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRULERule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getRULEAccess().getActionsACTIONCrossReference_11_1_0());
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleACTION
entryRuleACTION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getACTIONRule()); }
	iv_ruleACTION=ruleACTION
	{ $current=$iv_ruleACTION.current; }
	EOF;

// Rule ACTION
ruleACTION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Action'
		{
			newLeafNode(otherlv_0, grammarAccess.getACTIONAccess().getActionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getACTIONAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getACTIONRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='ID'
		{
			newLeafNode(otherlv_2, grammarAccess.getACTIONAccess().getIDKeyword_2());
		}
		(
			(
				lv_ID_3_0=RULE_STRING
				{
					newLeafNode(lv_ID_3_0, grammarAccess.getACTIONAccess().getIDSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getACTIONRule());
					}
					setWithLastConsumed(
						$current,
						"ID",
						lv_ID_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='event'
		{
			newLeafNode(otherlv_4, grammarAccess.getACTIONAccess().getEventKeyword_4());
		}
		(
			(
				lv_event_5_0=RULE_INT
				{
					newLeafNode(lv_event_5_0, grammarAccess.getACTIONAccess().getEventINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getACTIONRule());
					}
					setWithLastConsumed(
						$current,
						"event",
						lv_event_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEVALUABLE
entryRuleEVALUABLE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEVALUABLERule()); }
	iv_ruleEVALUABLE=ruleEVALUABLE
	{ $current=$iv_ruleEVALUABLE.current; }
	EOF;

// Rule EVALUABLE
ruleEVALUABLE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEVALUABLEAccess().getEXPRESSIONParserRuleCall_0());
		}
		this_EXPRESSION_0=ruleEXPRESSION
		{
			$current = $this_EXPRESSION_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEVALUABLEAccess().getCONNECTIVEParserRuleCall_1());
		}
		this_CONNECTIVE_1=ruleCONNECTIVE
		{
			$current = $this_CONNECTIVE_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEXPRESSION
entryRuleEXPRESSION returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEXPRESSIONRule()); }
	iv_ruleEXPRESSION=ruleEXPRESSION
	{ $current=$iv_ruleEXPRESSION.current; }
	EOF;

// Rule EXPRESSION
ruleEXPRESSION returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getEXPRESSIONAccess().getLeftParenthesSKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEXPRESSIONAccess().getLeftLITERALParserRuleCall_1_0());
				}
				lv_left_1_0=ruleLITERAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEXPRESSIONRule());
					}
					set(
						$current,
						"left",
						lv_left_1_0,
						"com.mert.recherche.MkDsl.LITERAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEXPRESSIONAccess().getOperandOPERANDParserRuleCall_2_0());
				}
				lv_operand_2_0=ruleOPERAND
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEXPRESSIONRule());
					}
					set(
						$current,
						"operand",
						lv_operand_2_0,
						"com.mert.recherche.MkDsl.OPERAND");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getEXPRESSIONAccess().getRightLITERALParserRuleCall_3_0());
				}
				lv_right_3_0=ruleLITERAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEXPRESSIONRule());
					}
					set(
						$current,
						"right",
						lv_right_3_0,
						"com.mert.recherche.MkDsl.LITERAL");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getEXPRESSIONAccess().getRGhtParenthesSKeyword_4());
		}
	)
;

// Entry rule entryRuleCONNECTIVE
entryRuleCONNECTIVE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCONNECTIVERule()); }
	iv_ruleCONNECTIVE=ruleCONNECTIVE
	{ $current=$iv_ruleCONNECTIVE.current; }
	EOF;

// Rule CONNECTIVE
ruleCONNECTIVE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_connective_0_1='AND'
				{
					newLeafNode(lv_connective_0_1, grammarAccess.getCONNECTIVEAccess().getConnectiveANDKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCONNECTIVERule());
					}
					setWithLastConsumed($current, "connective", lv_connective_0_1, null);
				}
				    |
				lv_connective_0_2='OR'
				{
					newLeafNode(lv_connective_0_2, grammarAccess.getCONNECTIVEAccess().getConnectiveORKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCONNECTIVERule());
					}
					setWithLastConsumed($current, "connective", lv_connective_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleVARIABLE
entryRuleVARIABLE returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVARIABLERule()); }
	iv_ruleVARIABLE=ruleVARIABLE
	{ $current=$iv_ruleVARIABLE.current; }
	EOF;

// Rule VARIABLE
ruleVARIABLE returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='var'
		{
			newLeafNode(otherlv_0, grammarAccess.getVARIABLEAccess().getVarKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVARIABLEAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVARIABLERule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='value'
		{
			newLeafNode(otherlv_2, grammarAccess.getVARIABLEAccess().getValueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVARIABLEAccess().getValueLITERALParserRuleCall_3_0());
				}
				lv_value_3_0=ruleLITERAL
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVARIABLERule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"com.mert.recherche.MkDsl.LITERAL");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOPERAND
entryRuleOPERAND returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOPERANDRule()); }
	iv_ruleOPERAND=ruleOPERAND
	{ $current=$iv_ruleOPERAND.current; }
	EOF;

// Rule OPERAND
ruleOPERAND returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_operand_0_1='<'
				{
					newLeafNode(lv_operand_0_1, grammarAccess.getOPERANDAccess().getOperandLessThanSGnKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPERANDRule());
					}
					setWithLastConsumed($current, "operand", lv_operand_0_1, null);
				}
				    |
				lv_operand_0_2='<='
				{
					newLeafNode(lv_operand_0_2, grammarAccess.getOPERANDAccess().getOperandLessThanSGnEqualsSGnKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPERANDRule());
					}
					setWithLastConsumed($current, "operand", lv_operand_0_2, null);
				}
				    |
				lv_operand_0_3='=='
				{
					newLeafNode(lv_operand_0_3, grammarAccess.getOPERANDAccess().getOperandEqualsSGnEqualsSGnKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPERANDRule());
					}
					setWithLastConsumed($current, "operand", lv_operand_0_3, null);
				}
				    |
				lv_operand_0_4='>='
				{
					newLeafNode(lv_operand_0_4, grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnEqualsSGnKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPERANDRule());
					}
					setWithLastConsumed($current, "operand", lv_operand_0_4, null);
				}
				    |
				lv_operand_0_5='>'
				{
					newLeafNode(lv_operand_0_5, grammarAccess.getOPERANDAccess().getOperandGreaterThanSGnKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOPERANDRule());
					}
					setWithLastConsumed($current, "operand", lv_operand_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleLITERAL
entryRuleLITERAL returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLITERALRule()); }
	iv_ruleLITERAL=ruleLITERAL
	{ $current=$iv_ruleLITERAL.current.getText(); }
	EOF;

// Rule LITERAL
ruleLITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_STRING_1=RULE_STRING
		{
			$current.merge(this_STRING_1);
		}
		{
			newLeafNode(this_STRING_1, grammarAccess.getLITERALAccess().getSTRINGTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCOLOR
entryRuleCOLOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCOLORRule()); }
	iv_ruleCOLOR=ruleCOLOR
	{ $current=$iv_ruleCOLOR.current; }
	EOF;

// Rule COLOR
ruleCOLOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='black'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getCOLORAccess().getNameBlackKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOLORRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='red'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getCOLORAccess().getNameRedKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOLORRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='green'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getCOLORAccess().getNameGreenKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOLORRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='blue'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getCOLORAccess().getNameBlueKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOLORRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
				    |
				lv_name_0_5='orange'
				{
					newLeafNode(lv_name_0_5, grammarAccess.getCOLORAccess().getNameOrangeKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOLORRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_5, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
